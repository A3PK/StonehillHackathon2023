#include <LiquidCrystal.h> //Includes the LiquidCrystal Library
LiquidCrystal lcd(12, 11, 5, 4, 3, 2); //Creates an LCD object - Parameters: (rs, enable, d4, d5, d6, d7)
const int trigPin = 9;
const int echoPin = 10;
int buttonPin = 7;
int buttonState = 0;
int led = 8;
int buzzer = 6;
long duration;
int distanceCm, distanceInch;

void setup() {
  Serial.begin(9600);
  pinMode(led, OUTPUT);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(buttonPin, INPUT);
  lcd.begin(16,2); // Initializes the interface to the LCD screen, and specifies the dimensions(width and height) of the display
}

void loop() {
  //checking if the button is pressed
  buttonState = digitalRead(buttonPin);
  if (buttonState == HIGH)
  {
    //Getting input form ultrasonic sensor and saving it
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(triPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
    duration = pulseIn(echoPin, HIGH); 
    distanceCm = duration * 0.034 / 2;
    distanceInch = duration * 0.0133 / 2;
    //Setting the LCD and printing on LCD
    lcd.setCursor(0, 0); // Sets the location at which subsequent text written to the LCD will be displayed
    lcd.print("Distance: "); // Prints string "Distance" on the LCD
    lcd.print(distanceCm); // Prints the distance value from the cursor
    lcd.print(" cm");
    delay(10);
    lcd.SetCursor(0, 1);
    lcd.print("Distance: ");
    lcd.print(distanceInch);
    lcd.print(" inch");
    delay(10);
    if((distanceCm<=15))
    {
      digitalWrite(led, HIGH);
      tone(buzzer, 450);
    }
    else if(distanceCm>15)
    {
      digitalWrite(led, LOW);
      noTone(buzzer);
    }
  }
  else
  {
  
  }
}
  
